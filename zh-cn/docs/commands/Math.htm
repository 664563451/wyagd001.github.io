<!DOCTYPE HTML>
<html>
<head>
<title>数学函数</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>数学函数</h1>

<h4>快速索引:</h4>
<ul>
  <li><a href="#General">一般数学</a>:
    <ul>
      <li><a href="#Abs">Abs - 绝对值</a></li>
      <li><a href="#Ceil">Ceil - 向上取整</a></li>
      <li><a href="#Exp">Exp - 指数</a></li>
      <li><a href="#Floor">Floor - 向下取整</a></li>
      <li><a href="#Log">Log - 十进制对数</a></li>
      <li><a href="#Ln">Ln - 自然对数</a></li>
      <li><a href="#Max">Max - 最大值</a></li>
      <li><a href="#Min">Min - 最小值</a></li>
      <li><a href="#Mod">Mod - 取余数(求模)</a></li>
      <li><a href="#Round">Round - 四舍五入</a></li>
      <li><a href="#Sqrt">Sqrt - 平方根</a></li>
    </ul>
  </li>
  <li><a href="#Trigonometry">三角函数</a>:
    <ul>
      <li><a href="#Sin">Sin - 正弦</a></li>
      <li><a href="#Cos">Cos - 余弦</a></li>
      <li><a href="#Tan">Tan - 正切</a></li>
      <li><a href="#ASin">ASin - 反正弦</a></li>
      <li><a href="#ACos">ACos - 反余弦</a></li>
      <li><a href="#ATan">ATan - 反正切</a></li>
    </ul>
  </li>
  <li><a href="#Errors">错误处理</a></li>
</ul>

<h2 id="General">一般数学</h2>

<div class="methodShort" id="Abs">
<h2>Abs <span class="ver">绝对值</span></h2>
<pre class="Syntax">Value := <span class="func">Abs</span>(Number)</pre>
<p>返回 <em>Number</em> 的绝对值.</p>
<p>返回值类型和 <em>Number</em> 保持一致(整数或浮点数).</p>
<pre class="NoIndent">MsgBox, % Abs(-1.2) <em>; 返回 1.2</em></pre>
</div>

<div class="methodShort" id="Ceil">
<h2>Ceil <span class="ver">向上取整</span></h2>
<pre class="Syntax">Value := <span class="func">Ceil</span>(Number)</pre>
<p>返回 <em>Number</em> 向上取整后的整数(不含任何 .00 后缀).</p>
<pre class="NoIndent">MsgBox, % Ceil(1.2)  <em>; 返回 2</em>
MsgBox, % Ceil(-1.2) <em>; 返回 -1</em></pre>
</div>

<div class="methodShort" id="Exp">
<h2>Exp <span class="ver">指数</span></h2>
<pre class="Syntax">Value := <span class="func">Exp</span>(N)</pre>
<p>返回 <em>e</em>(近似值为 2.71828182845905) 的 <em>N</em> 次幂.</p>
<p><em>N</em> 可以为负数或小数. 要使用 <em>e</em> 之外其他数计算, 请使用 <a href="../Variables.htm#pow">** 运算符</a>.</p>
<pre class="NoIndent">MsgBox, % Exp(1.2) <em>; 返回 3.320117</em></pre>
</div>

<div class="methodShort" id="Floor">
<h2>Floor <span class="ver">向下取整</span></h2>
<pre class="Syntax">Value := <span class="func">Floor</span>(Number)</pre>
<p>返回 <em>Number</em> 向下取整后的整数(不含任何 .00 后缀).</p>
<pre class="NoIndent">MsgBox, % Floor(1.2)  <em>; 返回 1</em>
MsgBox, % Floor(-1.2) <em>; 返回 -2</em></pre>
</div>

<div class="methodShort" id="Log">
<h2>Log <span class="ver">十进制对数</span></h2>
<pre class="Syntax">Value := <span class="func">Log</span>(Number)</pre>
<p>返回 <em>Number</em> 的十进制对数.</p>
<p>结果格式化为 <a href="SetFormat.htm">浮点数</a>. 如果 <em>Number</em> 为负数则返回空字符串.</p>
<pre class="NoIndent">MsgBox, % Log(1.2) <em>; 返回 0.079181</em></pre>
</div>

<div class="methodShort" id="Ln">
<h2>Ln <span class="ver">自然对数</span></h2>
<pre class="Syntax">Value := <span class="func">Ln</span>(Number)</pre>
<p>返回 <em>Number</em> 底数为 e 的自然对数.</p>
<p>结果格式化为 <a href="SetFormat.htm">浮点数</a>. 如果 <em>Number</em> 为负数则返回空字符串.</p>
<pre class="NoIndent">MsgBox, % Ln(1.2) <em>; 返回 0.182322</em></pre>
</div>

<div class="methodShort" id="Max">
<h2>Max <span class="headnote">最大值</span> <span class="ver">[v1.1.27+]</span></h2>
<pre class="Syntax">Value := <span class="func">Max</span>(Number1 <span class="optional">, Number2, ...</span>)</pre>
<p>返回一个或多个数字的最大值.</p>
<p>如果其中一个输入值为非数字的, 则返回空字符串.</p>
<pre class="NoIndent">MsgBox, % Max(2.11, -2, 0) <em>; 返回 2.11</em></pre>
<p>您还可以指定一个 <a href="../Functions.htm#Variadic">可变参数</a> 来比较数组中的多个值. 例如:</p>
<pre class="NoIndent">array := [1, 2, 3, 4]
MsgBox, % Max(array*) <em>; 返回 4</em>
</pre>
</div>

<div class="methodShort" id="Min">
<h2>Min <span class="headnote">最小值</span> <span class="ver">[v1.1.27+]</span></h2>
<pre class="Syntax">Value := <span class="func">Min</span>(Number1 <span class="optional">, Number2, ...</span>)</pre>
<p>返回一个或多个数字的最小值.</p>
<p>如果其中一个输入值为非数字的, 则返回空字符串.</p>
<pre class="NoIndent">MsgBox, % Min(2.11, -2, 0) <em>; 返回 -2</em></pre>
<p>您还可以指定一个 <a href="../Functions.htm#Variadic">可变参数</a> 来比较数组中的多个值. 例如:</p>
<pre class="NoIndent">array := [1, 2, 3, 4]
MsgBox, % Min(array*) <em>; 返回 1</em></pre>
</div>

<div class="methodShort" id="Mod">
<h2>Mod <span class="ver">取余数(求模)</span></h2>
<pre class="Syntax">Value := <span class="func">Mod</span>(Dividend, Divisor)</pre>
<p>返回 <em>Dividend</em> 除以 <em>Divisor</em> 之后的余数.</p>
<p>返回值的正负符号总是与 Dividend 相同(而不考虑 Divisor), 例如, mod(5, 3) 和 mod(5, -3) 的结果都为 2, 但 mod(-5, 3) 和 mod(-5, -3) 的结果为 -2. 如果传入浮点数, 则返回值也是浮点数, 例如, mod(5.0, 3) 的结果为 2.0 而 mod(5, 3.5) 的结果为 1.5. 如果 Divisor 为负数, 则返回空值(空字符串).</p>
<pre class="NoIndent">MsgBox, % Mod(7.5, 2) <em>; 返回 1.5, 因为 7.5 = 2 x 3 + 1.5</em></pre>
</div>

<div class="methodShort" id="Round">
<h2>Round <span class="ver">四舍五入</span></h2>
<pre class="Syntax">Value := <span class="func">Round</span>(Number <span class="optional">, N</span>)</pre>
<p>返回 <em>Number</em> 由 <em>N</em> 设置的小数点后几位的数字.</p>
<p>如果 <em>N</em> 忽略则 N 为 0, 表示对 <em>Number</em> 四舍五入后取整到最接近的整数:</p>
<pre class="NoIndent">MsgBox, % Round(3.14)    <em>; 返回 3</em></pre>
<p>如果 <em>N</em> 为正数, 则 <em>Number</em> 首先设置为小数点之后 <em>N</em> 位, 然后四舍五入:</p>
<pre class="NoIndent">MsgBox, % Round(3.14, 1) <em>; 返回 3.1</em></pre>
<p>如果 <em>N</em> 为负数, 则 <em>Number</em> 首先设置为小数点之前 <em>N</em> 位, 然后对右一位四舍五入:</p>
<pre class="NoIndent">MsgBox, % Round(345, -1) <em>; 返回 350, 这里的 -1 表示 5, 所以向上取整.</em>
MsgBox, % Round(345, -2) <em>; 返回 300, 因为 -2 表示 4, 所以向下取整.</em></pre>
<p>不同于 <a href="Transform.htm">Transform Round</a> 语句, 无论 <em>N</em> 被省略还是小于 1, 返回值总是不含 .000 后缀.<span class="ver">[v1.0.44.01+]</span>: 当 <em>N</em> 的值大于 0 时, 总是精确显示 <em>N</em> 个小数点后位数而不会被 <a href="SetFormat.htm">SetFormat</a> 影响. 如果这不是您期望的效果, 请在 Round() 返回之后再做一次计算; 例如: <code>Round(3.333, 1)<strong>+0</strong></code>.</p>
</div>

<div class="methodShort" id="Sqrt">
<h2>Sqrt <span class="ver">平方根</span></h2>
<pre class="Syntax">Value := <span class="func">Sqrt</span>(Number)</pre>
<p>返回 <em>Number</em> 的平方根.</p>
<p>结果格式化为 <a href="SetFormat.htm">浮点数</a>. 如果 <em>Number</em> 为负数则函数返回空字值(空字符串).</p>
<pre class="NoIndent">MsgBox, % Sqrt(16) <em>; 返回 4</em></pre>
</div>

<h2 id="Trigonometry">三角函数</h2>

<p class="note"><strong>注意</strong>: 要将弧度值转换为度数值, 可用 弧度乘以 180/pi(约为 57.29578). 要将度数值转为弧度值, 可用 读数值乘以 pi/180(约为 0.01745329252). pi 的值(约为 3.141592653589793) 为 4 乘以 1 的反正切的结果. (pi = 4 * ATan(1)).</p>

<div class="methodShort" id="Sin">
<h2>Sin <span class="ver">正弦</span></h2>
<pre class="Syntax">Value := <span class="func">Sin</span>(Number)</pre>
<p>返回 <em>Number</em> 的正弦.</p>
<p><em>Number</em> 必须为弧度值.</p>
<pre class="NoIndent">MsgBox, % Sin(1.2) <em>; 返回 0.932039</em></pre>
</div>

<div class="methodShort" id="Cos">
<h2>Cos <span class="ver">余弦</span></h2>
<pre class="Syntax">Value := <span class="func">Cos</span>(Number)</pre>
<p>返回 <em>Number</em> 的余弦值.</p>
<p><em>Number</em> 必须为弧度值.</p>
<pre class="NoIndent">MsgBox, % Cos(1.2) <em>; 返回 0.362358</em></pre>
</div>

<div class="methodShort" id="Tan">
<h2>Tan <span class="ver">正切</span></h2>
<pre class="Syntax">Value := <span class="func">Tan</span>(Number)</pre>
<p>返回 <em>Number</em> 的正切值.</p>
<p><em>Number</em> 必须为弧度值.</p>
<pre class="NoIndent">MsgBox, % Tan(1.2) <em>; 返回 2.572152</em></pre>
</div>

<div class="methodShort" id="ASin">
<h2>ASin <span class="ver">反正弦</span></h2>
<pre class="Syntax">Value := <span class="func">ASin</span>(Number)</pre>
<p>返回弧度表示的反正弦值(其正弦值为 <em>Number</em>).</p>
<p>如果 <em>Number</em> 小于 -1 或大于 1, 则函数返回空值(空字符串).</p>
<pre class="NoIndent">MsgBox, % ASin(0.2) <em>; 返回 0.201358</em></pre>
</div>

<div class="methodShort" id="ACos">
<h2>ACos <span class="ver">反余弦</span></h2>
<pre class="Syntax">Value := <span class="func">ACos</span>(Number)</pre>
<p>返回弧度表示的反余弦值(其余弦值为 <em>Number</em>).</p>
<p>如果 <em>Number</em> 小于 -1 或大于 1, 则函数返回空值(空字符串).</p>
<pre class="NoIndent">MsgBox, % ACos(0.2) <em>; 返回 1.369438</em></pre>
</div>

<div class="methodShort" id="ATan">
<h2>ATan <span class="ver">反正切</span></h2>
<pre class="Syntax">Value := <span class="func">ATan</span>(Number)</pre>
<p>返回弧度表示的反正切值(其正切值为 <em>Number</em>).</p>
<pre class="NoIndent">MsgBox, % ATan(1.2) <em>; 返回 0.876058</em></pre>
</div>

<h2 id="Errors">错误处理</h2>
<p>无效操作, 如除以零通常会产生一个空的结果(空字符串).</p>
<p><a href="#Abs">Abs</a>, <a href="#Max">Max</a>, <a href="#Min">Min</a> 和 <a href="#Mod">Mod</a> 返回空字符串, 如果它们的传入参数是非数值的. 大多数数学函数不执行严格的类型检查, 因此可能会将非数值作为零或另一个数字处理. 例如, <code>Round("1.0foo")</code> 返回 1. 然而, 这一点预计会在 <a href="https://autohotkey.com/v2/">AutoHotkey v2</a> 有所改变. </p>

</body>
</html>
