<!DOCTYPE HTML>
<html>
<head>
<title>Func 对象</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Func 对象<span class="ver">[v1.1.00+]</span></h1>

<p>表示可以被脚本调用的自定义或内置的函数. <a href="../commands/Func.htm">Func</a> returns an object of this type.</p>

<p>要查看关于其他可以像函数一样被调用的对象, 请参见 <a href="Functor.htm">Function 对象</a>.</p>

<p>到 Func 对象的引用也被称为 <em>函数引用</em>. 要获取函数引用, 请使用 Func 函数, 例如:</p>
<pre><em>; 引用一个名为 "StrLen" 的函数.</em>
fn := Func("StrLen")

<em>; 显示函数的信息.</em>
MsgBox % fn.Name "() is " (fn.IsBuiltIn ? "built-in." : "user-defined.")</pre>

<h2 id="Members">Object Members</h2>
<h4>Properties:</h4>
<ul>
  <li><a href="#Name">Name</a>: Returns the function's name.</li>
  <li><a href="#IsBuiltIn">IsBuiltIn</a>: Returns <i>true</i> if the function is built-in and <i>false</i> otherwise.</li>
  <li><a href="#IsVariadic">IsVariadic</a>: Returns <i>true</i> if the function is <a href="../Functions.htm#Variadic">variadic</a> and <i>false</i> otherwise.</li>
  <li><a href="#MinParams">MinParams</a>: Returns the number of required parameters.</li>
  <li><a href="#MaxParams">MaxParams</a>: Returns the number of formally-declared parameters for a user-defined function or maximum parameters for a built-in function.</li>
</ul>
<h4>Methods:</h4>
<ul>
  <li><a href="#Call">Call</a>: Calls the function.</li>
  <li><a href="#Bind">Bind</a>: Binds parameters to the function and returns a <a href="Functor.htm#BoundFunc">BoundFunc object</a>.</li>
  <li><a href="#IsByRef">IsByRef</a>: Determines whether a parameter is ByRef.</li>
  <li><a href="#IsOptional">IsOptional</a>: Determines whether a parameter is optional.</li>
</ul>

<div class="methodShort" id="Call"><h2>Call</h2>
<p>调用函数.</p>
<pre class="Syntax">Func.Call(Param1, Param2, ...)  <em>; Requires <span class="ver">[v1.1.19+]</span></em>
Func.(Param1, Param2, ...)  <em>; Old form - deprecated</em></pre>
<dl>
  <dt>Param1, Param2, ...</dt>
  <dd>Parameters and return value are defined by the function.</dd>
</dl>
<p><span class="ver">[v1.1.07+]</span>: <code><a href="../Functions.htm#DynCall">%Func%()</a></code> 可通过名称或引用来调用一个函数,或者通过调用对象的 __Call <a href="../Objects.htm#Meta_Functions">元函数</a>. 应该尽量使用这种语法来替代 <code>Func.()</code> 这种旧的语法.</p>
</div>

<div class="methodShort" id="Bind"><h2>Bind <span class="ver">[v1.1.20+]</span></h2>
<p>为函数绑定参数将返回 <a href="Functor.htm#BoundFunc">BoundFunc 对象</a>.</p>
<pre class="Syntax">BoundFunc := Func.Bind(Param1, Param2, ...)</pre>
<dl>
  <dt>Param1, Param2, ...</dt>
  <dd>Any number of parameters.</dd>
</dl>
<p>详情和例子,请参阅<a href="Functor.htm#BoundFunc">BoundFunc object</a>.</p>
</div>

<div class="methodShort" id="Name"><h2>Name</h2>
<p>返回函数的名称.</p>
<pre class="Syntax">FunctionName := Func.Name</pre>
</div>

<div class="methodShort" id="IsBuiltIn"><h2>IsBuiltIn</h2>
<p>内置函数返回 <i>true</i>, 否则返回 <i>false</i>.</p>
<pre class="Syntax">Boolean := Func.IsBuiltIn</pre>
</div>

<div class="methodShort" id="IsVariadic"><h2>IsVariadic</h2>
<p>当函数为 <a href="../Functions.htm#Variadic">可变参数</a> 返回 <i>true</i>, 否则返回 <i>false</i>.</p>
<pre class="Syntax">Boolean := Func.IsVariadic</pre>
</div>

<div class="methodShort" id="MinParams"><h2>MinParams</h2>
<p>返回函数必要参数的数目.</p>
<pre class="Syntax">ParamCount := Func.MinParams</pre>
</div>

<div class="methodShort" id="MaxParams"><h2>MaxParams</h2>
<p>对于用户定义函数返回正式声明的参数数目,对于内置函数返回最大的参数数目.</p>
<pre class="Syntax">ParamCount := Func.MaxParams</pre>
<p>If the function is <a href="../Functions.htm#Variadic">variadic</a>, <em>ParamCount</em> indicates the maximum number of parameters which can be accepted by the function without overflowing into the "variadic*" parameter.</p></div>

<div class="methodShort" id="IsByRef"><h2>IsByRef</h2>
<p>确定一个参数是否为 ByRef (按地址传递) 类型.</p>
<pre class="Syntax">Boolean := Func.IsByRef([ParamIndex])</pre>
<dl>
  <dt>ParamIndex</dt>
  <dd>Optional: the one-based index of a parameter. If omitted, <em>Boolean</em> indicates whether the function has any ByRef parameters.</dd>
</dl>
<p><strong>Returns</strong> an empty string if the function is built-in or <i>ParamIndex</i> is invalid; otherwise, a boolean value indicating whether the parameter is ByRef.</p>
</div>

<div class="methodShort" id="IsOptional"><h2>IsOptional</h2>
<p>确定一个参数是否是可选的.</p>
<pre class="Syntax">Boolean := Func.IsOptional([ParamIndex])</pre>
<dl>
  <dt>ParamIndex</dt>
  <dd>Optional: the one-based index of a parameter. If omitted, <em>Boolean</em> indicates whether the function has any optional parameters.</dd>
</dl>
<p><strong>Returns</strong> an empty string if <i>ParamIndex</i> is invalid; otherwise, a boolean value indicating whether the parameter is optional.</p>
<p>如果此函数是可变参数的, 那么参数可以不进行正式声明. 支持内置函数.</p></div>

</body>
</html>
